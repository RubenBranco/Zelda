version: "3.6"
services:
  nginx:
    image: zelda-nginx:latest
    networks:
      zelda: {}
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ~/certbot/etc/letsencrypt:/etc/letsencrypt:rw
      - ~/certbot/var/www/certbot:/var/www/certbot:rw
      - ~/nginx/conf.d:/etc/nginx/conf.d:ro
      - ~/nginx/logs/zelda:/zelda/logs:rw
      - ~/zelda/static:/zelda/static:ro
  zelda:
    image: zelda:latest
    networks:
      zelda: {}
    deploy:
      replicas: ${DJANGO_REPLICAS}
      restart_policy:
        condition: on-failure
    depends_on:
      - cache
      - postgres
    volumes:
      - ~/zelda/data:/zelda/data:rw
      - ~/zelda/logs:/zelda/logs:rw
      - ~/zelda/static:/zelda/static:rw
    env_file:
      - docker.env
  cache:
    image: memcached:latest
    networks:
      zelda: {}
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
  certbot:
    image: zelda-certbot:latest
    networks:
      zelda: {}
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
    volumes:
      - ~/certbot/etc/letsencrypt:/etc/letsencrypt:rw
      - ~/certbot/var/www/certbot:/var/www/certbot:rw
  postgres:
    image: postgres:11
    networks:
      zelda: {}
    deploy:
      restart_policy:
        condition: on-failure
      placement:
        constraints:
          - node.role == manager
    volumes:
      - ~/postgres/var/lib/postgresql/data:/var/lib/postgresql/data:rw
    env_file:
      - docker.env
networks:
  zelda: {}
